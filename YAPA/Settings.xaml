<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        xmlns:custom ="clr-namespace:YAPA"
        mc:Ignorable="d" 
        x:Class="YAPA.Settings"
        Title="YAPA Settings" 
        Height="630" 
        Width="450"
        ResizeMode="NoResize"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        Background="Transparent"
        AllowsTransparency="True"
        Closing="Settings_Closing">
    <Grid Background="Transparent">
        <Border Margin="10">
            <Border.Effect>
                <DropShadowEffect Color="Black" Direction="315" 
                                        ShadowDepth="0" Opacity=".5" BlurRadius="20" />
            </Border.Effect>
            <Grid Background="White" Margin="0,0,0,29">

                <StackPanel Orientation="Vertical" >

                    <DockPanel>
                        <TextBlock x:Name="YapaVersion"  Text="YAPA, v1.2.1"
            		    FontFamily="Segoe UI Light"
            		    FontSize="18pt" Margin="10,0,10,0"
                               />

                        <Button x:Name="btnDismiss"
            		        Command="{Binding DismissSettings}"
            		        Content="X"
            		        Cursor="Hand"
                            IsCancel="True"
            		        ToolTip="Close settings, dismiss changes"
            		        Margin="0,0,0,0" RenderTransformOrigin="0.478,0.513">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_close" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0" HorizontalAlignment="Right" Margin="0,0,26,0" VerticalAlignment="Top">
                                        <Path Width="18" Height="18" Canvas.Top="10" Stretch="Fill" Fill="#FF000000" Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z "/>
                                    </Canvas>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                    </DockPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0" HorizontalAlignment="Center" Height="110" x:Name="LoadingPanel" Visibility="Visible">
                        <Image gif:ImageBehavior.AnimatedSource="Resources/loader.gif" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </StackPanel>

                    <TextBlock Name="ExportData" Visibility="Collapsed" HorizontalAlignment="Right" TextAlignment="Center" Margin="0,0,40,0"><Hyperlink Click="ExportDataClick" TextDecorations=""><Run Text="Export"/></Hyperlink></TextBlock>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="110" x:Name="DayPanel" Visibility="Collapsed">
                        <StackPanel Orientation="Vertical" Margin="0,5,0,0" Width="13">
                            <TextBlock x:Name="MondayTextBlock" Height="11" Width="13" Margin="0,-1,0,12" FontSize="10" VerticalAlignment="Top" Text="M"></TextBlock>
                            <TextBlock Height="11" Width="13" Margin="0,0,0,12" FontSize="10" VerticalAlignment="Top" Text="W"></TextBlock>
                            <TextBlock Height="11" Width="13" Margin="0,0,0,1" FontSize="10" VerticalAlignment="Top" Text="F"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"  x:Name="WeekStackPanel" Width="377">

                        </StackPanel>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Margin="42,0,42,43">
                        <Label Content="Configure periods"/>
                        <StackPanel Orientation="Horizontal" Margin="5,0,0,15">
                            <Label Content="Work"/>
                            <xctk:IntegerUpDown 
                        	Margin="0,0,12,0" 
                        	ParsingNumberStyle="Number"
                        	Value="{Binding WorkTime, Mode=TwoWay}" 
                        	Minimum="1" BorderThickness="0"/>
                            <Label Content="Short breaks"/>
                            <xctk:IntegerUpDown
                            Margin="0,0,12,0"
                            ParsingNumberStyle="Number"
                            Value="{Binding BreakTime, Mode=TwoWay}"
                            Minimum="1" BorderThickness="0"/>
                            <Label Content="Long break"/>
                            <xctk:IntegerUpDown
                            Margin="0,0,0,0"
                            ParsingNumberStyle="Number"
                            Value="{Binding BreakLongTime, Mode=TwoWay}"
                            Minimum="1" BorderThickness="0"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Margin="0,0,0,15">
                            <Label Content="Opacity level"/>
                            <Slider TickPlacement="BottomRight"
                            Margin="5,0,5,0"
                    		Minimum="0"
                    		Maximum="1"
                    		IsMoveToPointEnabled="False"
                    		Value="{Binding ClockOpacity, Mode=TwoWay}"
                    		Ticks=".0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1.0" BorderThickness="0"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Margin="0,0,0,15">
                            <Label Content="Shadow opacity"/>
                            <Slider TickPlacement="BottomRight"
                            Margin="5,0,5,0"
                    		Minimum="0"
                    		Maximum="1"
                    		IsMoveToPointEnabled="False"
                    		Value="{Binding ShadowOpacity, Mode=TwoWay}"
                    		Ticks=".0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1.0" BorderThickness="0"/>
                        </StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="173*"/>
                                <ColumnDefinition Width="148*"/>
                                <ColumnDefinition Width="25*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="22*"/>
                                <RowDefinition Height="8*"/>
                                <RowDefinition Height="7*"/>
                            </Grid.RowDefinitions>

                            <CheckBox IsChecked="{Binding SoundEffects, Mode=TwoWay}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" Margin="0,8,0,-8" >
                                <Label Margin="0,-5" Content="Sound notifications"/>
                            </CheckBox>
                            <CheckBox  Grid.Column="1" IsChecked="{Binding UseWhiteText, Mode=TwoWay}" Grid.ColumnSpan="2" >
                                <Label Margin="0,-5" Content="Light theme"/>
                            </CheckBox>

                            <CheckBox Grid.Column="1" Grid.Row="2" IsChecked="{Binding CountBackwards, Mode=TwoWay}" Margin="0,23,0,-23" Grid.ColumnSpan="2">
                                <Label Margin="0,-5" Content="Count backwards"/>
                            </CheckBox>
                            <CheckBox Grid.Column="1" IsChecked="{Binding MinimizeToTray, Mode=TwoWay}" Margin="0,15,0,7" Grid.RowSpan="3" Grid.ColumnSpan="2" >
                                <Label Margin="0,-5" Content="Minimize to tray"/>
                            </CheckBox>

                            <CheckBox Grid.Column="0" Grid.Row="2" IsChecked="{Binding AutoStartBreak, Mode=TwoWay}" Margin="0,8,0,-8" HorizontalAlignment="Left" Width="173" >
                                <Label Margin="0,-5" Content="Auto start break"/>
                            </CheckBox>
                            <CheckBox Grid.Row="2" IsChecked="{Binding AutoStartWork, Mode=TwoWay}" Margin="0,23,0,-23" >
                                <Label Margin="0,-5" Content="Auto start work"/>
                            </CheckBox>
                            <CheckBox IsChecked="{Binding StartOnLoad, Mode=TwoWay}" Margin="0,0,0,7" >
                                <Label Margin="0,-5" Content="Start when loaded"/>
                            </CheckBox>
                            <CheckBox IsChecked="{Binding StartInSystemTray, Mode=TwoWay}" Margin="0,15,0,7" Grid.RowSpan="3" >
                                <Label Margin="0,-5" Content="Start minimized"/>
                            </CheckBox>
                        </Grid>
                        <Grid Margin="0,34,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                                <Label Content="Work music (repeat" />
                                <CheckBox VerticalAlignment="Center" IsChecked="{Binding RepeatWorkMusic, Mode=TwoWay}"/>
                                <Label Content="):"/>
                            </StackPanel>

                            <TextBox Grid.Row="1" Grid.Column="0" Text="{Binding WorkMusic, Mode=TwoWay}"  Margin="5,0,0,15" />
                            <Button Grid.Row="1" Grid.Column="1" Content="Browse" Margin="5,0,0,15" x:Name="BrowseWorkMusic" Click="BrowseWorkMusic_OnClick"/>

                            <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                                <Label Content="Break music (repeat" />
                                <CheckBox VerticalAlignment="Center" IsChecked="{Binding RepeatBreakMusic, Mode=TwoWay}"/>
                                <Label Content="):"/>
                            </StackPanel>
                            <TextBox Grid.Row="3" Grid.Column="0" Text="{Binding BreakMusic, Mode=TwoWay}" Margin="5,0,0,15" />
                            <Button Grid.Row="3" Grid.Column="1" Content="Browse" Margin="5,0,0,15" x:Name="BrowseBreakMusic" Click="BrowseBreakMusic_OnClick"/>
                        </Grid>
                    </StackPanel>
                </StackPanel>
                <Button x:Name="btnClose"
            		Command="{Binding SaveSettings}"
            		Content="Save"
            		Cursor="Hand"
            		ToolTip="Save settings"
            		Margin="351,541,10,10" RenderTransformOrigin="0.478,0.513">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <TextBlock Text="{TemplateBinding Content}" 
            					HorizontalAlignment="Stretch"
            					VerticalAlignment="Center"
            					TextAlignment="Center"
            					FontSize="12pt"/>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>
        </Border>
    </Grid>
</Window>